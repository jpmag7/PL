
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND COMMENT ELSE EQ FALSE GE IF INPUT INT LE NEQ NOT OR PRINT STR TRUE WHILE id num strProgram : Declarations StatementsDeclarations : Declarations DeclarationDeclarations : Declaration : Type IdListType : INTType : STRIdList : IdList ',' idIdList : idStatements : Statements StatementStatements : StatementStatement : id '=' ExpStatement : PRINT '(' PrintArgs ')'PrintArgs : PrintArgs ',' PrintArgPrintArgs : PrintArgPrintArg : strPrintArg : ExpExp : Exp '+' TermExp : Exp '-' TermExp : TermTerm : Term '*' FactorTerm : Term '/' FactorTerm : FactorFactor : INT '(' Exp ')'Factor : INPUT '(' str ')'Factor : idFactor : numStatement : WHILE '(' Cond ')' CondStatements Statement : IF '(' Cond ')' CondStatements ElseElse : Else : ELSE CondStatementsCondStatements : StatementCondStatements : '{' Statements '}'Cond : Cond OR Cond2Cond : Cond2Cond2 : Cond2 AND Cond3Cond2 : Cond3Cond3 : NOT ExpRelCond3 : ExpRelCond3 : TRUECond3 : FALSEExpRel : Exp '>' ExpExpRel : Exp '<' ExpExpRel : Exp GE ExpExpRel : Exp LE ExpExpRel : Exp EQ ExpExpRel : Exp NEQ Exp"
    
_lr_action_items = {'id':([0,2,3,4,5,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,35,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,68,69,70,79,80,81,82,83,84,85,86,],[-3,7,7,-2,-10,15,-5,-6,-9,-4,-8,21,21,21,21,41,-25,-11,-19,-22,-26,21,-7,21,21,21,21,21,-12,21,7,21,21,21,21,21,21,21,21,7,-17,-18,-20,-21,-27,-31,7,-29,-23,-24,7,-28,7,-32,-30,]),'PRINT':([0,2,3,4,5,13,14,15,21,22,23,24,27,41,48,50,60,61,62,63,64,68,69,70,79,80,81,82,83,84,85,86,],[-3,8,8,-2,-10,-9,-4,-8,-25,-11,-19,-22,-26,-7,-12,8,8,-17,-18,-20,-21,-27,-31,8,-29,-23,-24,8,-28,8,-32,-30,]),'WHILE':([0,2,3,4,5,13,14,15,21,22,23,24,27,41,48,50,60,61,62,63,64,68,69,70,79,80,81,82,83,84,85,86,],[-3,9,9,-2,-10,-9,-4,-8,-25,-11,-19,-22,-26,-7,-12,9,9,-17,-18,-20,-21,-27,-31,9,-29,-23,-24,9,-28,9,-32,-30,]),'IF':([0,2,3,4,5,13,14,15,21,22,23,24,27,41,48,50,60,61,62,63,64,68,69,70,79,80,81,82,83,84,85,86,],[-3,10,10,-2,-10,-9,-4,-8,-25,-11,-19,-22,-26,-7,-12,10,10,-17,-18,-20,-21,-27,-31,10,-29,-23,-24,10,-28,10,-32,-30,]),'INT':([0,2,4,14,15,16,17,18,19,35,41,42,43,44,45,46,49,51,52,54,55,56,57,58,59,],[-3,11,-2,-4,-8,25,25,25,25,25,-7,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'STR':([0,2,4,14,15,41,],[-3,12,-2,-4,-8,-7,]),'$end':([1,3,5,13,21,22,23,24,27,48,61,62,63,64,68,69,79,80,81,83,85,86,],[0,-1,-10,-9,-25,-11,-19,-22,-26,-12,-17,-18,-20,-21,-27,-31,-29,-23,-24,-28,-32,-30,]),'}':([5,13,21,22,23,24,27,48,61,62,63,64,68,69,79,80,81,82,83,85,86,],[-10,-9,-25,-11,-19,-22,-26,-12,-17,-18,-20,-21,-27,-31,-29,-23,-24,85,-28,-32,-30,]),'=':([7,],[16,]),'(':([8,9,10,25,26,],[17,18,19,46,47,]),',':([14,15,21,23,24,27,28,29,30,31,41,61,62,63,64,67,80,81,],[20,-8,-25,-19,-22,-26,49,-14,-15,-16,-7,-17,-18,-20,-21,-13,-23,-24,]),'INPUT':([16,17,18,19,35,42,43,44,45,46,49,51,52,54,55,56,57,58,59,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'num':([16,17,18,19,35,42,43,44,45,46,49,51,52,54,55,56,57,58,59,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'str':([17,47,49,],[30,66,30,]),'NOT':([18,19,51,52,],[35,35,35,35,]),'TRUE':([18,19,51,52,],[37,37,37,37,]),'FALSE':([18,19,51,52,],[38,38,38,38,]),'*':([21,23,24,27,61,62,63,64,80,81,],[-25,44,-22,-26,44,44,-20,-21,-23,-24,]),'/':([21,23,24,27,61,62,63,64,80,81,],[-25,45,-22,-26,45,45,-20,-21,-23,-24,]),'+':([21,22,23,24,27,31,39,61,62,63,64,65,73,74,75,76,77,78,80,81,],[-25,42,-19,-22,-26,42,42,-17,-18,-20,-21,42,42,42,42,42,42,42,-23,-24,]),'-':([21,22,23,24,27,31,39,61,62,63,64,65,73,74,75,76,77,78,80,81,],[-25,43,-19,-22,-26,43,43,-17,-18,-20,-21,43,43,43,43,43,43,43,-23,-24,]),'ELSE':([21,22,23,24,27,48,61,62,63,64,68,69,79,80,81,83,85,86,],[-25,-11,-19,-22,-26,-12,-17,-18,-20,-21,-27,-31,84,-23,-24,-28,-32,-30,]),')':([21,23,24,27,28,29,30,31,32,33,34,36,37,38,40,53,61,62,63,64,65,66,67,71,72,73,74,75,76,77,78,80,81,],[-25,-19,-22,-26,48,-14,-15,-16,50,-34,-36,-38,-39,-40,60,-37,-17,-18,-20,-21,80,81,-13,-33,-35,-41,-42,-43,-44,-45,-46,-23,-24,]),'>':([21,23,24,27,39,61,62,63,64,80,81,],[-25,-19,-22,-26,54,-17,-18,-20,-21,-23,-24,]),'<':([21,23,24,27,39,61,62,63,64,80,81,],[-25,-19,-22,-26,55,-17,-18,-20,-21,-23,-24,]),'GE':([21,23,24,27,39,61,62,63,64,80,81,],[-25,-19,-22,-26,56,-17,-18,-20,-21,-23,-24,]),'LE':([21,23,24,27,39,61,62,63,64,80,81,],[-25,-19,-22,-26,57,-17,-18,-20,-21,-23,-24,]),'EQ':([21,23,24,27,39,61,62,63,64,80,81,],[-25,-19,-22,-26,58,-17,-18,-20,-21,-23,-24,]),'NEQ':([21,23,24,27,39,61,62,63,64,80,81,],[-25,-19,-22,-26,59,-17,-18,-20,-21,-23,-24,]),'AND':([21,23,24,27,33,34,36,37,38,53,61,62,63,64,71,72,73,74,75,76,77,78,80,81,],[-25,-19,-22,-26,52,-36,-38,-39,-40,-37,-17,-18,-20,-21,52,-35,-41,-42,-43,-44,-45,-46,-23,-24,]),'OR':([21,23,24,27,32,33,34,36,37,38,40,53,61,62,63,64,71,72,73,74,75,76,77,78,80,81,],[-25,-19,-22,-26,51,-34,-36,-38,-39,-40,51,-37,-17,-18,-20,-21,-33,-35,-41,-42,-43,-44,-45,-46,-23,-24,]),'{':([50,60,84,],[70,70,70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Declarations':([0,],[2,]),'Statements':([2,70,],[3,82,]),'Declaration':([2,],[4,]),'Statement':([2,3,50,60,70,82,84,],[5,13,69,69,5,13,69,]),'Type':([2,],[6,]),'IdList':([6,],[14,]),'Exp':([16,17,18,19,35,46,49,51,52,54,55,56,57,58,59,],[22,31,39,39,39,65,31,39,39,73,74,75,76,77,78,]),'Term':([16,17,18,19,35,42,43,46,49,51,52,54,55,56,57,58,59,],[23,23,23,23,23,61,62,23,23,23,23,23,23,23,23,23,23,]),'Factor':([16,17,18,19,35,42,43,44,45,46,49,51,52,54,55,56,57,58,59,],[24,24,24,24,24,24,24,63,64,24,24,24,24,24,24,24,24,24,24,]),'PrintArgs':([17,],[28,]),'PrintArg':([17,49,],[29,67,]),'Cond':([18,19,],[32,40,]),'Cond2':([18,19,51,],[33,33,71,]),'Cond3':([18,19,51,52,],[34,34,34,72,]),'ExpRel':([18,19,35,51,52,],[36,36,53,36,36,]),'CondStatements':([50,60,84,],[68,79,86,]),'Else':([79,],[83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Declarations Statements','Program',2,'p_Program','lp_sin.py',5),
  ('Declarations -> Declarations Declaration','Declarations',2,'p_Declarations_list','lp_sin.py',9),
  ('Declarations -> <empty>','Declarations',0,'p_Declarations_empty','lp_sin.py',12),
  ('Declaration -> Type IdList','Declaration',2,'p_Declaration','lp_sin.py',15),
  ('Type -> INT','Type',1,'p_Type_int','lp_sin.py',18),
  ('Type -> STR','Type',1,'p_Type_str','lp_sin.py',21),
  ('IdList -> IdList , id','IdList',3,'p_IdList_list','lp_sin.py',24),
  ('IdList -> id','IdList',1,'p_IdList_single','lp_sin.py',27),
  ('Statements -> Statements Statement','Statements',2,'p_Statements_list','lp_sin.py',30),
  ('Statements -> Statement','Statements',1,'p_Statements_single','lp_sin.py',34),
  ('Statement -> id = Exp','Statement',3,'p_Statement_atrib','lp_sin.py',38),
  ('Statement -> PRINT ( PrintArgs )','Statement',4,'p_Statement_print','lp_sin.py',42),
  ('PrintArgs -> PrintArgs , PrintArg','PrintArgs',3,'p_PrintArgs_list','lp_sin.py',46),
  ('PrintArgs -> PrintArg','PrintArgs',1,'p_PrintArgs_single','lp_sin.py',50),
  ('PrintArg -> str','PrintArg',1,'p_PrintArg_str','lp_sin.py',54),
  ('PrintArg -> Exp','PrintArg',1,'p_PrintArg_exp','lp_sin.py',58),
  ('Exp -> Exp + Term','Exp',3,'p_Exp_ad','lp_sin.py',62),
  ('Exp -> Exp - Term','Exp',3,'p_Exp_sub','lp_sin.py',66),
  ('Exp -> Term','Exp',1,'p_Exp_term','lp_sin.py',70),
  ('Term -> Term * Factor','Term',3,'p_Term_mul','lp_sin.py',74),
  ('Term -> Term / Factor','Term',3,'p_Term_div','lp_sin.py',78),
  ('Term -> Factor','Term',1,'p_Term_factor','lp_sin.py',82),
  ('Factor -> INT ( Exp )','Factor',4,'p_Factor_int','lp_sin.py',86),
  ('Factor -> INPUT ( str )','Factor',4,'p_Factor_input','lp_sin.py',90),
  ('Factor -> id','Factor',1,'p_Factor_id','lp_sin.py',93),
  ('Factor -> num','Factor',1,'p_Factor_num','lp_sin.py',96),
  ('Statement -> WHILE ( Cond ) CondStatements','Statement',5,'p_Statement_while','lp_sin.py',100),
  ('Statement -> IF ( Cond ) CondStatements Else','Statement',6,'p_Statement_if','lp_sin.py',103),
  ('Else -> <empty>','Else',0,'p_Else_empty','lp_sin.py',106),
  ('Else -> ELSE CondStatements','Else',2,'p_Else','lp_sin.py',109),
  ('CondStatements -> Statement','CondStatements',1,'p_CondStatements_simple','lp_sin.py',112),
  ('CondStatements -> { Statements }','CondStatements',3,'p_CondStatements_compound','lp_sin.py',115),
  ('Cond -> Cond OR Cond2','Cond',3,'p_Cond_or','lp_sin.py',118),
  ('Cond -> Cond2','Cond',1,'p_Cond','lp_sin.py',121),
  ('Cond2 -> Cond2 AND Cond3','Cond2',3,'p_Cond2_and','lp_sin.py',124),
  ('Cond2 -> Cond3','Cond2',1,'p_Cond2','lp_sin.py',127),
  ('Cond3 -> NOT ExpRel','Cond3',2,'p_Cond3_not','lp_sin.py',130),
  ('Cond3 -> ExpRel','Cond3',1,'p_Cond3','lp_sin.py',133),
  ('Cond3 -> TRUE','Cond3',1,'p_Cond3_True','lp_sin.py',136),
  ('Cond3 -> FALSE','Cond3',1,'p_Cond3_False','lp_sin.py',139),
  ('ExpRel -> Exp > Exp','ExpRel',3,'p_ExpRel_gt','lp_sin.py',142),
  ('ExpRel -> Exp < Exp','ExpRel',3,'p_ExpRel_lt','lp_sin.py',145),
  ('ExpRel -> Exp GE Exp','ExpRel',3,'p_ExpRel_ge','lp_sin.py',148),
  ('ExpRel -> Exp LE Exp','ExpRel',3,'p_ExpRel_le','lp_sin.py',151),
  ('ExpRel -> Exp EQ Exp','ExpRel',3,'p_ExpRel_eq','lp_sin.py',154),
  ('ExpRel -> Exp NEQ Exp','ExpRel',3,'p_ExpRel_neq','lp_sin.py',157),
]
